1.Qué crítica le harías al protocolo de #estaHerido y #noEstaHerido? (en vez de tener solo el mensaje #estaHerido y hacer “#estaHerido not” para saber la negación)

La crítica que le haríamos es que se está repitiendo código con poco sentido. Es cierto que es más claro el #noEstaHerido que el #estaHerido not pero no al punto de justificar hacer otro mensaje que se podría evitar facilmente con uno ya hecho y una función lógica.

2.¿Qué opinan de que para algunas funcionalidades tenemos 3 tests para el mismo comportamiento pero aplicando a cada uno de los combatientes (Arthas, Mankrik y Olgra)

Se podría hacer una sola que reciba como parámetro a los distintos combatientes. Ya que es útil probar que todos estos funcionen como deberían (por lo menos por ahora que no se ha definido una clase entonces podría haber pequeñas diferencias en el código que lleven a errores) pero no es necesario repetir código para lograr esto.

3.¿Cómo modelaron el resultado de haber desarrollado un combate? ¿qué opciones consideraron y por qué se quedaron con la que entregaron y por qué descartaron a las otras?

Modelamos el resultado como un ciclo donde se ejecutan las rondas que no para hasta que o alguno bando se queda sin jugadores o se excede el número de rondas máximo propuesto. Para saber quien ganó (o si nungún bando lo hizo) definimos un colaborador interno de string que contiene el mensaje del resultado. Además, para comparar si jugó el numero de rondas propuestas definimos otro colaborador interno que guarda el número de la última ronda jugada. Pensamos en hacerse un cilo timesRepeat por el numero de rondas máximas, pasadas como parámetro y evaluar si alguno había ganado posteriormente a la finalización del ciclo, pero decidimos que se estaba alejando del comportamiento real ya que, si algún bando quedó fuera de juego previo a la máxima cantidad de rondas, se repetía el ciclo un sin sentido y esto no sucede en la realidad. Una ves que alguien gana se termina el juego. Además pensamos en hacer otro objeto Resultado que contuviera los datos del bando ganador y en que ronda se terminó el combate pero descartamos esto por considerar que un modelado mas cercano a la realidad es que los resultados del juego estén dentro del orquestador de combate (como un mensaje de este) en ves de ser un objeto aparte.